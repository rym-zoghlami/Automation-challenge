name: "Tests of push & pull"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FILENAME: README.md
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  USER_NAME: ${{ secrets.USER_NAME }}

jobs:
  tests:
    name: 'Validate README.md changes'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # <-- Mise à jour vers v3

      - name: Set up Python
        uses: actions/setup-python@v4  # <-- Mise à jour vers v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pytest python-dotenv
          # Installation conditionnelle des requirements
          if [ -f "scripts/requirements.txt" ]; then
            pip install -r scripts/requirements.txt
          fi
          # Vérification que pytest est installé
          python -c "import pytest; print('pytest version:', pytest.__version__)"

      - name: Run API tests
        run: |
          # Vérifie d'abord si le fichier de test existe
          if [ -f "scripts/tests/test_api.py" ]; then
            pytest scripts/tests/test_api.py -v
          else
            echo "⚠️  test_api.py not found, skipping API tests"
          fi

      - name: Validate Markdown format
        run: |
          # Vérifie que le fichier existe avant validation
          if [ -f "${FILENAME}" ]; then
            python scripts/validate/format.py "${FILENAME}"
          else
            echo "❌ ${FILENAME} not found!"
            exit 1
          fi

      - name: Validate pull request changes
        run: |
          if [ -f "scripts/github_pull_request.sh" ]; then
            scripts/github_pull_request.sh ${{ github.repository }} ${{ github.event.pull_request.number }} "${FILENAME}"
          else
            echo "⚠️  github_pull_request.sh not found"
          fi
        if: github.event_name == 'pull_request'

      - name: Checking if push changes are duplicated
        run: |
          if [ -f "scripts/validate/links.py" ]; then
            python scripts/validate/links.py "${FILENAME}" --only_duplicate_links_checker
          else
            echo "⚠️  links.py not found"
          fi
        if: github.event_name == 'push'